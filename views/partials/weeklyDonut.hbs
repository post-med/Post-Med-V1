<canvas id="myChart-{{this.id}}" width="350" height="350"></canvas>

<script>

  Chart.Chart.pluginService.register({
    beforeDraw: function (chart) {
      if (chart.config.centerText.display !== null &&
        typeof chart.config.centerText.display !== 'undefined' &&
        chart.config.centerText.display) {
        drawTotals(chart);
      }
    },
  });

  function drawTotals(chart) {

    var width = chart.chart.width,
      height = chart.chart.height,
      ctx = chart.chart.ctx;

    ctx.restore();
    var fontSize = (height / 114).toFixed(2);
    ctx.font = fontSize + "courier";
    ctx.textBaseline = "middle";

    var text = chart.config.centerText.text,
      textX = Math.round((width - ctx.measureText(text).width) / 2),
      textY = height / 2;

    ctx.fillText(text, textX, textY);
    ctx.save();
  }


  Chart.defaults.global.legend.display = false;
  var baseUrl = "http://localhost:8000";
  var ctx = document.getElementById('myChart-{{this.id}}').getContext('2d');
  // chart creation


  var myChart = new Chart(ctx, {
    type: 'doughnut',
    data: {
      labels: ['Medication', 'Visitation', 'Excercise', 'Rest'],
      datasets: [{
        label: '# of Votes',
        data: [{{ this.summary }}],
      backgroundColor: [
        '#D77A61',
        '#DBD3D8',
        '#D8B4A0',
        '#EFF1F3'
      ],
      borderColor: [
        'rgba(255, 99, 132, 1)',
        'rgba(54, 162, 235, 1)',
        'rgba(255, 206, 86, 1)',
        'rgba(75, 192, 192, 1)',
        'rgba(153, 102, 255, 1)',
        'rgba(255, 159, 64, 1)'
      ],
      borderWidth: 0
    }]
  },
    centerText: {
      display: true,
      text: "{{this.id}}"
    }
  })
</script>